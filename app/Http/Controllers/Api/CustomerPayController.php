<?php
bolt_decrypt( __FILE__ , 'XFdLZX'); return 0;
##!!!##DQoNCm5hbWVzcGFjZSBBcHBcSHR0cFxDb250cm9sbGVyc1xBcGk7DQoNCnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xDb250cm9sbGVyOw0KdXNlIEFwcFxIdHRwXFJlcXVlc3RzXEN1c3RvbWVyUmVxdWVzdDsNCnVzZSBBcHBcTW9kZWxzXEN1c3RvbWVyOw0KdXNlIEFwcFxNb2RlbHNcQ3VzdG9tZXJQYXk7DQp1c2UgQXBwXE1vZGVsc1xTaGlmdDsNCnVzZSBJbGx1bWluYXRlXEh0dHBcUmVxdWVzdDsNCnVzZSBEQjsNCg0KY2xhc3MgQ3VzdG9tZXJQYXlDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlcg0Kew0KICAgIC8qKg0KICAgICAqIERpc3BsYXkgYSBsaXN0aW5nIG9mIHRoZSByZXNvdXJjZS4NCiAgICAgKg0KICAgICAqIEByZXR1cm4gXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBpbmRleCgpDQogICAgew0KICAgICAgICAkY3VzdG9tZXJzQ2FzaCA9IEN1c3RvbWVyUGF5Ojp3aWR0aCgncGF5TWV0aG9kcycpLT5nZXQoKTsNCiAgICAgICAgcmV0dXJuICBqc29uX2VuY29kZSgkY3VzdG9tZXJzQ2FzaCk7DQogICAgfQ0KDQoNCiAgICAvKioNCiAgICAgKiBTdG9yZSBhIG5ld2x5IGNyZWF0ZWQgcmVzb3VyY2UgaW4gc3RvcmFnZS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAgXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0ICAkcmVxdWVzdA0KICAgICAqIEByZXR1cm4gXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZQ0KICAgICAqLw0KICAgIHB1YmxpYyBmdW5jdGlvbiBzdG9yZShSZXF1ZXN0ICRyZXF1ZXN0KQ0KICAgIHsNCiAgICAgICAgJHBheXMgPSBhcnJheSgpOw0KICAgICAgICAkcGF5c1snaXNfcGF5J10gPSAkcmVxdWVzdC0+aXNfcGF5Ow0KICAgICAgICAkcGF5c1sncGFpZF92YWx1ZSddID0gJHJlcXVlc3QtPnBheTsNCiAgICAgICAgJHBheXNbJ3BheV9tZXRob2QnXSA9ICRyZXF1ZXN0LT5wYXlfbWV0aG9kOw0KICAgICAgICAkcGF5c1sndXNlcl9pZCddID0gJHJlcXVlc3QtPnVzZXJfaWQ7DQogICAgICAgICRwYXlzWydwYWlkX2RhdGUnXSA9IG5vdygpOw0KICAgICAgICAkcGF5c1snY3VzdF9pZCddID0gJHJlcXVlc3QtPmN1c3RvbWVyWydjdXN0X2lkJ107DQogICAgICAgICRjdXN0ID0gREI6OnRhYmxlKCdjdXN0b21lcnMnKS0+d2hlcmUoJ2N1c3RfaWQnLCAkcmVxdWVzdC0+Y3VzdG9tZXJbJ2N1c3RfaWQnXSktPmZpcnN0KCk7Ow0KICAgICAgICAkcGF5c1snY3VzdF9iYWxhbmNlX2JlZm9yZSddID0gJGN1c3QtPmN1c3RfYmFsYW5jZTsNCiAgICAgICAgJGN1c3RvbWVyID0gREI6OnRhYmxlKCdjdXN0b21lcnMnKQ0KICAgICAgICAgICAgLT53aGVyZSgnY3VzdF9pZCcsICRyZXF1ZXN0LT5jdXN0b21lclsnY3VzdF9pZCddKTsNCiAgICAgICAgaWYgKCRwYXlzWydpc19wYXknXSkgew0KICAgICAgICAgICAgJGN1c3RvbWVyLT51cGRhdGUoWydjdXN0X2JhbGFuY2UnID0+IERCOjpyYXcoJ2N1c3RfYmFsYW5jZSAtJyAuICRyZXF1ZXN0LT5wYXkpXSk7DQogICAgICAgICAgICAkcGF5c1snbm90ZSddID0gItiq2YjYsdmK2K8g2YbZgtiv2YrYqSI7DQogICAgICAgICAgICAkc2hpZnQgPSBEQjo6dGFibGUoJ3NoaWZ0cycpLT53aGVyZU51bGwoJ2VuZF9kYXRlJyktPmZpcnN0KCk7DQogICAgICAgICAgICBpZiAoJHNoaWZ0KSB7DQogICAgICAgICAgICAgICAgc3dpdGNoICgkcmVxdWVzdC0+cGF5X21ldGhvZCkgew0KICAgICAgICAgICAgICAgICAgICBjYXNlICgxKToNCiAgICAgICAgICAgICAgICAgICAgICAgIERCOjp0YWJsZSgnc2hpZnRzJyktPndoZXJlTnVsbCgnZW5kX2RhdGUnKS0+dXBkYXRlKFsnY2FzaCcgPT4gREI6OnJhdygnY2FzaCArJyAuICRyZXF1ZXN0LT5wYXkpXSk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAoMik6DQogICAgICAgICAgICAgICAgICAgICAgICBEQjo6dGFibGUoJ3NoaWZ0cycpLT53aGVyZU51bGwoJ2VuZF9kYXRlJyktPnVwZGF0ZShbJ2NhcmQnID0+IERCOjpyYXcoJ2NhcmQgKycgLiAkcmVxdWVzdC0+cGF5KV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGVsc2Ugew0KDQogICAgICAgICAgICAgICAgJHNoaWZ0ID0gYXJyYXkoKTsNCiAgICAgICAgICAgICAgICAkc2hpZnRbJ2N1cnJlbnRfdXNlciddID0gJHJlcXVlc3QtPnVzZXJfaWQ7DQogICAgICAgICAgICAgICAgJHNoaWZ0WydyZWNpdmVkX3VzZXInXSA9IG51bGw7DQogICAgICAgICAgICAgICAgJHNoaWZ0WydzdGFydGVyX3BvaW50J10gPSAwOw0KICAgICAgICAgICAgICAgICRzaGlmdFsnY2FzaCddID0gMDsNCiAgICAgICAgICAgICAgICAkc2hpZnRbJ2NhcmQnXSA9IDA7DQogICAgICAgICAgICAgICAgJHNoaWZ0WydsYXRlciddID0gMDsNCiAgICAgICAgICAgICAgICBzd2l0Y2ggKCRyZXF1ZXN0LT5wYXlfbWV0aG9kKSB7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgMToNCiAgICAgICAgICAgICAgICAgICAgICAgICRzaGlmdFsnY2FzaCddID0gJHRoaXMtPmdldExhc3RFbmRlZENhc2goKSArICRyZXF1ZXN0LT5wYXk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOg0KICAgICAgICAgICAgICAgICAgICAgICAgJHNoaWZ0WydjYXNoJ10gPSAkdGhpcy0+Z2V0TGFzdEVuZGVkQ2FzaCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHNoaWZ0WydjYXJkJ10gPSAkcmVxdWVzdC0+cGF5ID8/IDA7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICAgICAgICAgICRzaGlmdFsnY2FzaCddID0gJHRoaXMtPmdldExhc3RFbmRlZENhc2goKSArICRyZXF1ZXN0LT5wYXk7DQogICAgICAgICAgICAgICAgICAgICAgICAkc2hpZnRbJ2xhdGVyJ10gPSAkcmVxdWVzdC0+cmVtYWluOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgJHNoaWZ0Wyd0cmFuc2ZlciddID0gMDsNCiAgICAgICAgICAgICAgICAkc2hpZnRbJ2luY3JlYXNlJ10gPSAwOw0KICAgICAgICAgICAgICAgICRzaGlmdFsnZGVmaWNpdCddID0gMDsNCiAgICAgICAgICAgICAgICAkc2hpZnRbJ3N0YXJ0ZXJfZGF0ZSddID0gbm93KCk7DQogICAgICAgICAgICAgICAgJHNoaWZ0WydlbmRfZGF0ZSddID0gbnVsbDsNCiAgICAgICAgICAgICAgICBTaGlmdDo6Y3JlYXRlKCRzaGlmdCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkc2hpZnQgPSBEQjo6dGFibGUoJ3NoaWZ0cycpLT53aGVyZU51bGwoJ2VuZF9kYXRlJyktPmZpcnN0KCk7DQogICAgICAgICAgICBpZiAoJHNoaWZ0KSB7DQogICAgICAgICAgICAgICAgc3dpdGNoICgkcmVxdWVzdC0+cGF5X21ldGhvZCkgew0KICAgICAgICAgICAgICAgICAgICBjYXNlICgxKToNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkcmVxdWVzdC0+cGF5ID4gJHNoaWZ0LT5jYXNoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWydlcnJvcicgPT4gJ9i52YHZiNinINmE2KfZitmI2KzYryDZhtmC2K/ZitipINmB2Yog2KfZhNiv2LHYrCEnXSwgNDAxKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIERCOjp0YWJsZSgnc2hpZnRzJyktPndoZXJlTnVsbCgnZW5kX2RhdGUnKS0+dXBkYXRlKFsnY2FzaCcgPT4gREI6OnJhdygnY2FzaCAtJyAuICRyZXF1ZXN0LT5wYXkpXSk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAoMik6DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHJlcXVlc3QtPnBheSA+ICRzaGlmdC0+Y2FzaCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsnZXJyb3InID0+ICfYudmB2YjYpyDZhNin2YrZiNis2K8g2YbZgtiv2YrYqSDZgdmKINin2YTYr9ix2KwhJ10sIDQwMSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBEQjo6dGFibGUoJ3NoaWZ0cycpLT53aGVyZU51bGwoJ2VuZF9kYXRlJyktPnVwZGF0ZShbJ2NhcmQnID0+IERCOjpyYXcoJ2NhcmQgLScgLiAkcmVxdWVzdC0+cGF5KV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAkY3VzdG9tZXItPnVwZGF0ZShbJ2N1c3RfYmFsYW5jZScgPT4gREI6OnJhdygnY3VzdF9iYWxhbmNlICsnIC4gJHJlcXVlc3QtPnBheSldKTsNCiAgICAgICAgICAgICAgICAkcGF5c1snbm90ZSddID0gIti12LHZgSDZhtmC2K/ZitipIjsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWydlcnJvcicgPT4gJ9i52YHZiNinINmE2KfZitmI2KzYryDZhtmC2K/ZitipINmB2Yog2KfZhNiv2LHYrCEnXSwgNDAxKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAkY3VzdCA9IERCOjp0YWJsZSgnY3VzdG9tZXJzJyktPndoZXJlKCdjdXN0X2lkJywgJHJlcXVlc3QtPmN1c3RvbWVyWydjdXN0X2lkJ10pLT5maXJzdCgpOw0KICAgICAgICAkcGF5c1snY3VzdF9hZnRlcl9hZnRlciddID0gJGN1c3QtPmN1c3RfYmFsYW5jZTsNCg0KICAgICAgICAkcGF5c19ubyA9IERCOjp0YWJsZSgnY3VzdG9tZXJfcGF5JyktPmluc2VydCgkcGF5cyk7DQogICAgICAgIHJldHVybiByZXNwb25zZSgkcGF5c19ubyk7DQogICAgfQ0KDQoNCiAgICAvKioNCiAgICAgKiBEaXNwbGF5IHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gIGludCAgJGlkDQogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIHNob3coJGlkKQ0KICAgIHsNCiAgICB9DQoNCg0KDQogICAgLyoqDQogICAgICogVXBkYXRlIHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UgaW4gc3RvcmFnZS4NCiAgICAgKg0KICAgICAqIEBwYXJhbSAgXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0ICAkcmVxdWVzdA0KICAgICAqIEBwYXJhbSAgaW50ICAkaWQNCiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZnVuY3Rpb24gdXBkYXRlKEN1c3RvbWVyUmVxdWVzdCAkcmVxdWVzdCwgJGlkKQ0KICAgIHsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiBSZW1vdmUgdGhlIHNwZWNpZmllZCByZXNvdXJjZSBmcm9tIHN0b3JhZ2UuDQogICAgICoNCiAgICAgKiBAcGFyYW0gIGludCAgJGlkDQogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGRlc3Ryb3koJGlkKQ0KICAgIHsNCiAgICB9DQogICAgcHVibGljIGZ1bmN0aW9uIGdldExhc3RFbmRlZENhc2goKQ0KICAgIHsNCiAgICAgICAgJHNoaWZ0ID0gREI6OnRhYmxlKCdzaGlmdHMnKS0+d2hlcmVOb3ROdWxsKCdlbmRfZGF0ZScpLT5vcmRlckJ5KCdpZCcsICdERVNDJyktPmZpcnN0KCk7DQogICAgICAgIHJldHVybiAganNvbl9lbmNvZGUoJHNoaWZ0LT5yZW1haW4pOw0KICAgIH0NCn0NCg==